// Generated by generate-registration.ts. Do not edit manually.


// Define abstract types matching the central schema
export type QuestionType =
  | 'text'
  | 'textarea'
  | 'email'
  | 'password'
  | 'confirmPassword' // Added to match config
  | 'number'
  | 'scale' // Added V3 type
  | 'boolean'
  | 'single-select'
  | 'multi-select-numbered' // Added V3 type
  | 'ranking-numbered'; // Added V3 type

export interface Question {
  id: string;
  label: string;
  type: QuestionType;
  required: boolean;
  placeholder?: string;
  options?: string[];
  dependsOn?: string;
  dependsValue?: any;
  clientValidation?: (value: any, allValues?: Record<string, any>) => string | undefined;
}



export type FormDataStore = {
  firstName?: any; // TODO: Refine types based on q.type
  lastName?: any; // TODO: Refine types based on q.type
  email?: any; // TODO: Refine types based on q.type
  academicYear?: any; // TODO: Refine types based on q.type
  academicYearOther?: any; // TODO: Refine types based on q.type
  programOfStudy?: any; // TODO: Refine types based on q.type
  philosophyCoursework?: any; // TODO: Refine types based on q.type
  philosophyConfidenceDiscussion?: any; // TODO: Refine types based on q.type
  philosophyConfidenceWriting?: any; // TODO: Refine types based on q.type
  philosophyTraditions?: any; // TODO: Refine types based on q.type
  philosophyTraditionsOther?: any; // TODO: Refine types based on q.type
  philosophyInterests?: any; // TODO: Refine types based on q.type
  philosophyInterestsOther?: any; // TODO: Refine types based on q.type
  philosophyInfluences?: any; // TODO: Refine types based on q.type
  workingStyle?: any; // TODO: Refine types based on q.type
  workingStyleOther?: any; // TODO: Refine types based on q.type
  communicationStyle?: any; // TODO: Refine types based on q.type
  collaborationRole?: any; // TODO: Refine types based on q.type
  collaborationRoleOther?: any; // TODO: Refine types based on q.type
  presentationComfort?: any; // TODO: Refine types based on q.type
  previousCollaborationExperience?: any; // TODO: Refine types based on q.type
  previousCollaborationExperienceOther?: any; // TODO: Refine types based on q.type
  technicalFamiliarity?: any; // TODO: Refine types based on q.type
  technicalInterests?: any; // TODO: Refine types based on q.type
  themeRanking?: any; // TODO: Refine types based on q.type
  themeRankingOther?: any; // TODO: Refine types based on q.type
  workshopRanking?: any; // TODO: Refine types based on q.type
  workshopRankingOther?: any; // TODO: Refine types based on q.type
  teammateSimilarityPreference?: any; // TODO: Refine types based on q.type
  mentorshipPreference?: any; // TODO: Refine types based on q.type
  mentorComfortAreas?: any; // TODO: Refine types based on q.type
  preferredTeammates?: any; // TODO: Refine types based on q.type
  discordMember?: any; // TODO: Refine types based on q.type
  learningGoals?: any; // TODO: Refine types based on q.type
  learningGoalsOther?: any; // TODO: Refine types based on q.type
  availabilityConfirmation?: any; // TODO: Refine types based on q.type
  availabilityDetails?: any; // TODO: Refine types based on q.type
  contingencyAvailability?: any; // TODO: Refine types based on q.type
  contingencyAvailabilityDetails?: any; // TODO: Refine types based on q.type
  dietaryRestrictions?: any; // TODO: Refine types based on q.type
  accessibilityNeeds?: any; // TODO: Refine types based on q.type
  heardAboutSource?: any; // TODO: Refine types based on q.type
  heardAboutSourceOther?: any; // TODO: Refine types based on q.type
  additionalInfo?: any; // TODO: Refine types based on q.type
  finalConfirmationAgreement?: any; // TODO: Refine types based on q.type
  currentQuestionIndex?: number;
  isVerified?: boolean; // Track if email/password step is done
};


export const questions: Question[] = [
  {
    id: 'firstName',
    label: `First Name`, // Use template literal for easier escaping
    type: 'text',
    required: true,
  },
  {
    id: 'lastName',
    label: `Last Name`, // Use template literal for easier escaping
    type: 'text',
    required: true,
  },
  {
    id: 'email',
    label: `University Email Address`, // Use template literal for easier escaping
    type: 'email',
    required: true,
  },
  {
    id: 'academicYear',
    label: `Year of Study`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["First year","Second year","Third year","Fourth year","Fifth year","Graduate student","Other"],
  },
  {
    id: 'academicYearOther',
    label: `Other Year of Study`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'academicYear',
    dependsValue: "Other",
  },
  {
    id: 'programOfStudy',
    label: `Program/Major(s)`, // Use template literal for easier escaping
    type: 'text',
    required: true,
  },
  {
    id: 'philosophyCoursework',
    label: `Philosophy courses completed`, // Use template literal for easier escaping
    type: 'textarea',
    required: true,
  },
  {
    id: 'philosophyConfidenceDiscussion',
    label: `How would you rate your confidence in philosophical discussion?`, // Use template literal for easier escaping
    type: 'scale',
    required: true,
  },
  {
    id: 'philosophyConfidenceWriting',
    label: `How would you rate your confidence in philosophical writing?`, // Use template literal for easier escaping
    type: 'scale',
    required: true,
  },
  {
    id: 'philosophyTraditions',
    label: `Which philosophical traditions are you most familiar with?`, // Use template literal for easier escaping
    type: 'multi-select-numbered',
    required: true,
    options: ["Analytic philosophy","Continental philosophy","Ancient philosophy","Medieval philosophy","Modern philosophy","Non-Western philosophical traditions","I'm new to philosophy and still exploring","Other"],
  },
  {
    id: 'philosophyTraditionsOther',
    label: `Other Philosophical Traditions`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'philosophyTraditions',
    dependsValue: "Other",
  },
  {
    id: 'philosophyInterests',
    label: `Areas of philosophical interest`, // Use template literal for easier escaping
    type: 'multi-select-numbered',
    required: true,
    options: ["Metaphysics","Epistemology","Ethics","Political philosophy","Philosophy of mind","Philosophy of language","Philosophy of technology","Philosophy of science","Aesthetics","Phenomenology","Logic","Existentialism","Pragmatism","Psychoanalysis","Post-structuralism","Critical theory","Feminist philosophy","Environmental philosophy","Other"],
  },
  {
    id: 'philosophyInterestsOther',
    label: `Other Areas of Philosophical Interest`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'philosophyInterests',
    dependsValue: "Other",
  },
  {
    id: 'philosophyInfluences',
    label: `Philosophical influences (Optional)`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
  },
  {
    id: 'workingStyle',
    label: `Working Style Preferences`, // Use template literal for easier escaping
    type: 'multi-select-numbered',
    required: true,
    options: ["I prefer structured discussions with clear roles","I prefer free-flowing, organic conversations","I enjoy debating opposing viewpoints","I like collaborative consensus-building","Other"],
  },
  {
    id: 'workingStyleOther',
    label: `Other Working Style Preference`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'workingStyle',
    dependsValue: "Other",
  },
  {
    id: 'communicationStyle',
    label: `Communication Style`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["I tend to process ideas internally before speaking","I think out loud and develop ideas through conversation","I adapt my style depending on the group dynamic"],
  },
  {
    id: 'collaborationRole',
    label: `In collaborative philosophical work, I typically prefer to:`, // Use template literal for easier escaping
    type: 'multi-select-numbered',
    required: true,
    options: ["Lead discussions and synthesize ideas","Research sources and gather evidence","Develop written arguments","Present concepts to others","Challenge assumptions and play devil's advocate","Listen and provide feedback on others' ideas","Other"],
  },
  {
    id: 'collaborationRoleOther',
    label: `Other Preferred Collaboration Role`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'collaborationRole',
    dependsValue: "Other",
  },
  {
    id: 'presentationComfort',
    label: `How comfortable are you with presenting philosophical ideas to a group?`, // Use template literal for easier escaping
    type: 'scale',
    required: true,
  },
  {
    id: 'previousCollaborationExperience',
    label: `Have you previously participated in collaborative philosophical discussions?`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["Yes, frequently (e.g., philosophy clubs, reading groups)","Yes, occasionally (e.g., class discussions, informal debates)","Rarely or never","Other"],
  },
  {
    id: 'previousCollaborationExperienceOther',
    label: `Other Collaboration Experience`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'previousCollaborationExperience',
    dependsValue: "Other",
  },
  {
    id: 'technicalFamiliarity',
    label: `How familiar are you with technical concepts generally (e.g., programming, AI, digital culture)?`, // Use template literal for easier escaping
    type: 'scale',
    required: true,
  },
  {
    id: 'technicalInterests',
    label: `Technical Interests (Optional)`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
  },
  {
    id: 'themeRanking',
    label: `Please rank your top 3 preferred themes`, // Use template literal for easier escaping
    type: 'ranking-numbered',
    required: true,
    options: ["Minds and Machines: Consciousness Beyond the Human","Digital Commons: Rethinking Property in Information Space","Algorithmic Governance: Authority Without Autonomy?","Technological Singularity: Philosophical Implications of Superintelligence","Extended Perception: Technology and Phenomenological Experience","Digital Ethics: Beyond Utilitarian Frameworks","Attention Economies: The Commodification of Consciousness","Algorithmic Aesthetics: Beauty in the Age of Machine Creation","Other"],
  },
  {
    id: 'themeRankingOther',
    label: `If you ranked "Other" theme, please describe your idea`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
    dependsOn: 'themeRanking',
    dependsValue: "Other",
  },
  {
    id: 'workshopRanking',
    label: `Please rank your top 3 preferred workshops`, // Use template literal for easier escaping
    type: 'ranking-numbered',
    required: true,
    options: ["Language Models as Philosophical Objects","Generative AI Art: Creativity, Authorship, and Aesthetics","Reinforcement Learning: The Technical Foundations of AGI","Technology as Tool vs Master: Beyond Instrumentalism","Digital Commons and Information Capitalism","The Attention Economy: Technical Mechanisms and Philosophical Implications","Thinking Through Technical Systems: A Philosophical Approach","Design Philosophy: From Metaphysics to Material Reality","Other"],
  },
  {
    id: 'workshopRankingOther',
    label: `If you ranked "Other" workshop, please describe your idea`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
    dependsOn: 'workshopRanking',
    dependsValue: "Other",
  },
  {
    id: 'teammateSimilarityPreference',
    label: `Teammate similarity preference`, // Use template literal for easier escaping
    type: 'scale',
    required: true,
  },
  {
    id: 'mentorshipPreference',
    label: `Experience level and mentorship preferences`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["I'd like to serve as a mentor to newer philosophy students","I'd like to be paired with a more experienced student as a mentee","I prefer to work with students of similar experience level to mine","I don't have a strong preference"],
  },
  {
    id: 'mentorComfortAreas',
    label: `If you selected that you\'d like to be a mentor, what aspects of philosophy are you comfortable mentoring in?`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
    dependsOn: 'mentorshipPreference',
    dependsValue: "I'd like to serve as a mentor to newer philosophy students",
  },
  {
    id: 'preferredTeammates',
    label: `Do you have any specific people you\'d like to have as teammates? (Optional)`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
  },
  {
    id: 'discordMember',
    label: `Are you a member of the Philosophy of Technology Group Discord?`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["Yes","No, but I'd like to join","No, and I prefer not to join"],
  },
  {
    id: 'learningGoals',
    label: `What do you hope to gain from the Philosothon experience?`, // Use template literal for easier escaping
    type: 'multi-select-numbered',
    required: true,
    options: ["Deeper understanding of specific philosophical concepts","Experience with collaborative philosophical inquiry","New perspectives from peers with different backgrounds","Practice articulating philosophical arguments","Connections with other philosophy students","Technical knowledge about emerging technologies","Other"],
  },
  {
    id: 'learningGoalsOther',
    label: `Other Learning Goals`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'learningGoals',
    dependsValue: "Other",
  },
  {
    id: 'availabilityConfirmation',
    label: `Please confirm your availability for the full duration of the event (April 26-27, 2025)`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["Yes, I can attend the full event","No, I have partial availability (please specify below)"],
  },
  {
    id: 'availabilityDetails',
    label: `If you have partial availability, please specify the times you CAN attend`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
    dependsOn: 'availabilityConfirmation',
    dependsValue: "No, I have partial availability (please specify below)",
  },
  {
    id: 'contingencyAvailability',
    label: `Contingency Planning: If we need to postpone the event, would you be available the following weekend (May 3-4, 2025)?`, // Use template literal for easier escaping
    type: 'single-select',
    required: true,
    options: ["Yes, I would be fully available that weekend","I would have partial availability that weekend (please specify below)","No, I would not be available that weekend"],
  },
  {
    id: 'contingencyAvailabilityDetails',
    label: `If you have partial availability for the contingency dates, please specify`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
    dependsOn: 'contingencyAvailability',
    dependsValue: "I would have partial availability that weekend (please specify below)",
  },
  {
    id: 'dietaryRestrictions',
    label: `Do you have any dietary restrictions or preferences?`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
  },
  {
    id: 'accessibilityNeeds',
    label: `Do you require any accessibility accommodations?`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
  },
  {
    id: 'heardAboutSource',
    label: `How did you hear about the Philosothon?`, // Use template literal for easier escaping
    type: 'multi-select-numbered',
    required: true,
    options: ["Email announcement","From a professor","From a friend/classmate","Philosophy department communication","Social media","Other"],
  },
  {
    id: 'heardAboutSourceOther',
    label: `Other Source`, // Use template literal for easier escaping
    type: 'text',
    required: false,
    dependsOn: 'heardAboutSource',
    dependsValue: "Other",
  },
  {
    id: 'additionalInfo',
    label: `Is there anything else you\'d like us to know? (Optional)`, // Use template literal for easier escaping
    type: 'textarea',
    required: false,
  },
  {
    id: 'finalConfirmationAgreement',
    label: `By submitting this form, I confirm that I understand the time commitment required for the Philosothon (all day April 26 and morning of April 27) and will make arrangements to fully participate and provide feedback on my experience.`, // Use template literal for easier escaping
    type: 'boolean',
    required: true,
  }
];
