-- Draft migration generated by generate-registration.ts at 2025-04-21T09:58:02.549Z
-- Please review and adjust column types, constraints, and defaults before applying.

BEGIN;

-- Ensure the registrations table exists (adjust if needed)
-- CREATE TABLE IF NOT EXISTS public.registrations (
--   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
--   user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
--   created_at TIMESTAMPTZ DEFAULT now(),
--   updated_at TIMESTAMPTZ DEFAULT now()
--   -- Add other base columns as needed
-- );

-- Add columns based on registrationSchema
ALTER TABLE public.registrations
  ADD COLUMN IF NOT EXISTS "firstName" TEXT,
  ADD COLUMN IF NOT EXISTS "lastName" TEXT,
  ADD COLUMN IF NOT EXISTS "email" VARCHAR(255),
  ADD COLUMN IF NOT EXISTS "academicYear" TEXT,
  ADD COLUMN IF NOT EXISTS "academicYearOther" TEXT,
  ADD COLUMN IF NOT EXISTS "programOfStudy" TEXT,
  ADD COLUMN IF NOT EXISTS "philosophyCoursework" TEXT,
  ADD COLUMN IF NOT EXISTS "philosophyConfidenceDiscussion" INTEGER,
  ADD COLUMN IF NOT EXISTS "philosophyConfidenceWriting" INTEGER,
  ADD COLUMN IF NOT EXISTS "philosophyTraditions" TEXT[],
  ADD COLUMN IF NOT EXISTS "philosophyTraditionsOther" TEXT,
  ADD COLUMN IF NOT EXISTS "philosophyInterests" TEXT[],
  ADD COLUMN IF NOT EXISTS "philosophyInterestsOther" TEXT,
  ADD COLUMN IF NOT EXISTS "philosophyInfluences" TEXT,
  ADD COLUMN IF NOT EXISTS "workingStyle" TEXT[],
  ADD COLUMN IF NOT EXISTS "workingStyleOther" TEXT,
  ADD COLUMN IF NOT EXISTS "communicationStyle" TEXT,
  ADD COLUMN IF NOT EXISTS "collaborationRole" TEXT[],
  ADD COLUMN IF NOT EXISTS "collaborationRoleOther" TEXT,
  ADD COLUMN IF NOT EXISTS "presentationComfort" INTEGER,
  ADD COLUMN IF NOT EXISTS "previousCollaborationExperience" TEXT,
  ADD COLUMN IF NOT EXISTS "previousCollaborationExperienceOther" TEXT,
  ADD COLUMN IF NOT EXISTS "technicalFamiliarity" INTEGER,
  ADD COLUMN IF NOT EXISTS "technicalInterests" TEXT,
  ADD COLUMN IF NOT EXISTS "themeRanking" JSONB,
  ADD COLUMN IF NOT EXISTS "themeRankingOther" TEXT,
  ADD COLUMN IF NOT EXISTS "workshopRanking" JSONB,
  ADD COLUMN IF NOT EXISTS "workshopRankingOther" TEXT,
  ADD COLUMN IF NOT EXISTS "teammateSimilarityPreference" INTEGER,
  ADD COLUMN IF NOT EXISTS "mentorshipPreference" TEXT,
  ADD COLUMN IF NOT EXISTS "mentorComfortAreas" TEXT,
  ADD COLUMN IF NOT EXISTS "preferredTeammates" TEXT,
  ADD COLUMN IF NOT EXISTS "discordMember" TEXT,
  ADD COLUMN IF NOT EXISTS "learningGoals" TEXT[],
  ADD COLUMN IF NOT EXISTS "learningGoalsOther" TEXT,
  ADD COLUMN IF NOT EXISTS "availabilityConfirmation" TEXT,
  ADD COLUMN IF NOT EXISTS "availabilityDetails" TEXT,
  ADD COLUMN IF NOT EXISTS "contingencyAvailability" TEXT,
  ADD COLUMN IF NOT EXISTS "contingencyAvailabilityDetails" TEXT,
  ADD COLUMN IF NOT EXISTS "dietaryRestrictions" TEXT,
  ADD COLUMN IF NOT EXISTS "accessibilityNeeds" TEXT,
  ADD COLUMN IF NOT EXISTS "heardAboutSource" TEXT[],
  ADD COLUMN IF NOT EXISTS "heardAboutSourceOther" TEXT,
  ADD COLUMN IF NOT EXISTS "additionalInfo" TEXT,
  ADD COLUMN IF NOT EXISTS "finalConfirmationAgreement" BOOLEAN;

-- Add/Update foreign key constraint to link registrations to users (if not already present)
ALTER TABLE public.registrations
  ADD COLUMN IF NOT EXISTS user_id UUID,
  ADD CONSTRAINT registrations_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;

-- Optional: Index on user_id
CREATE INDEX IF NOT EXISTS idx_registrations_user_id ON public.registrations(user_id);

COMMIT;
